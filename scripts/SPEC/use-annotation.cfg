#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):     LLVM/3.9.0
#    Operating system(s):     Linux
#    Hardware:                AMD64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label useannotationconfig                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64   
%elif %{bits} == 32
%   define model        -m32   
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

#backup_config          = 0                     # Uncomment for cleaner config/ directory
flagsurl01              = $[top]/config/flags/gcc.xml
flagsurl02              = $[top]/config/flags/clang.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv

preenv                  = 1
tune                    = base,peak

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the 
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might 
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes 
%define  cpucores       4      #         number of physical cores
%define  cputhreads     8      #         number of logical cores
%define  numanodes      0      #         number of NUMA nodes for affinity

intrate,fprate:
   copies                  = %{cpucores}      
intspeed,fpspeed:
   threads                 = %{cputhreads}   

#-------- CPU binding for rate -----------------------------------------------
# When you run multiple copies for SPECrate mode, performance
# is improved if you bind the copies to specific processors.  EDIT the numactl stuff below.

intrate,fprate:
submit       = echo "$command" > run.sh ; $BIND bash run.sh

# Affinity settings:                     EDIT this section
# Please adjust these values for your 
# particular system as these settings are 
# for an 8 core, one NUMA node (-m 0) system.
#bind0	= numactl -m 0 --physcpubind=0
#bind1	= numactl -m 0 --physcpubind=1
#bind2	= numactl -m 0 --physcpubind=2
#bind3	= numactl -m 0 --physcpubind=3
#bind4	= numactl -m 0 --physcpubind=4
#bind5	= numactl -m 0 --physcpubind=5
#bind6	= numactl -m 0 --physcpubind=6
#bind7	= numactl -m 0 --physcpubind=7

# EDIT to add additional cores and NUMA nodes as necessary
# bind8	        = numactl -m 1 --physcpubind=8
# bind9	        = numactl -m 1 --physcpubind=9
# bind10	= numactl -m 1 --physcpubind=10
# bind11	= numactl -m 1 --physcpubind=11
# bind12	= numactl -m 1 --physcpubind=12
# bind13	= numactl -m 1 --physcpubind=13
# bind14	= numactl -m 1 --physcpubind=14
# bind15	= numactl -m 1 --physcpubind=15
#
# bind16	= numactl -m 2 --physcpubind=16
# bind17	= numactl -m 2 --physcpubind=17
# bind18	= numactl -m 2 --physcpubind=18
# bind19	= numactl -m 2 --physcpubind=19
# bind20	= numactl -m 2 --physcpubind=20
# bind21	= numactl -m 2 --physcpubind=21
# bind22	= numactl -m 2 --physcpubind=22
# bind23	= numactl -m 2 --physcpubind=23
#
# bind24	= numactl -m 3 --physcpubind=24
# bind25	= numactl -m 3 --physcpubind=25
# bind26	= numactl -m 3 --physcpubind=26
# bind27	= numactl -m 3 --physcpubind=27
# bind28	= numactl -m 3 --physcpubind=28
# bind29	= numactl -m 3 --physcpubind=29
# bind30	= numactl -m 3 --physcpubind=30
# bind31	= numactl -m 3 --physcpubind=31
#
# bind32	= numactl -m 4 --physcpubind=32
# bind33	= numactl -m 4 --physcpubind=33
# bind34	= numactl -m 4 --physcpubind=34
# bind35	= numactl -m 4 --physcpubind=35
# bind36	= numactl -m 4 --physcpubind=36
# bind37	= numactl -m 4 --physcpubind=37
# bind38	= numactl -m 4 --physcpubind=38
# bind39	= numactl -m 4 --physcpubind=39
#
# bind40	= numactl -m 5 --physcpubind=40
# bind41	= numactl -m 5 --physcpubind=41
# bind42	= numactl -m 5 --physcpubind=42
# bind43	= numactl -m 5 --physcpubind=43
# bind44	= numactl -m 5 --physcpubind=44
# bind45	= numactl -m 5 --physcpubind=45
# bind46	= numactl -m 5 --physcpubind=46
# bind47	= numactl -m 5 --physcpubind=47
#
# bind48	= numactl -m 6 --physcpubind=48
# bind49	= numactl -m 6 --physcpubind=49
# bind50	= numactl -m 6 --physcpubind=50
# bind51	= numactl -m 6 --physcpubind=51
# bind52	= numactl -m 6 --physcpubind=52
# bind53	= numactl -m 6 --physcpubind=53
# bind54	= numactl -m 6 --physcpubind=54
# bind55	= numactl -m 6 --physcpubind=55
#
# bind56	= numactl -m 7 --physcpubind=56
# bind57	= numactl -m 7 --physcpubind=57
# bind58	= numactl -m 7 --physcpubind=58
# bind59	= numactl -m 7 --physcpubind=59
# bind60	= numactl -m 7 --physcpubind=60
# bind61	= numactl -m 7 --physcpubind=61
# bind62	= numactl -m 7 --physcpubind=62
# bind63	= numactl -m 7 --physcpubind=63


#------- Compilers ------------------------------------------------------------
default:
#                                      EDIT paths to LLVM and libraries:
%   define  gcc_dir        /usr/bin
    BASE_DIR           = path_to_llvm_build_directory
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]/build
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    DRAGONEGG_PATH     = $[LLVM_PATH]/dragonegg
    DRAGONEGG_SPECS    = $[DRAGONEGG_PATH]/integrated-as.specs
    # DragonEgg version 3.5.2 requires GCC version 4.8.2.
    # EDIT LLVM_GCC_DIR to reflect the GCC path.
    LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    # Specify Intel OpenMP library path.
    OPENMP_DIR         = $[BASE_DIR]/lib/libomp_oss/exports
   
    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = $(LLVM_BIN_PATH)/clang %{model}
    CXX                 = $(LLVM_BIN_PATH)/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/gfortran
    FC                  = $(FORTRAN_COMP) %{model}
    #CLD                 = $(LLVM_BIN_PATH)/clang %{model}
    CLD                 = $(LLVM_BIN_PATH)/llvm-link
    CXXLD               = $(LLVM_BIN_PATH)/llvm-link
    FLD                 = $(LLVM_BIN_PATH)/clang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the 
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same 
%else                                 # options, so we add them to all of 
    LDCFLAGS        = #-z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix} 

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG 
   FPORTABILITY  = -fconvert=big-endian 

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char 
    CXXPORTABILITY = -D__BOOL_DEFINED 

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian 

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -emit-llvm -O3 -g -mavx -fno-vectorize -fno-slp-vectorize -fno-unroll-loops 
    CXXOPTIMIZE   = -emit-llvm -O3 -g -mavx
    FOPTIMIZE     = -O3 -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so
    EXTRA_FLIBS   = -lgfortran -lm
    LDOPTIMIZE    = #-z muldefs
    NEEDATFILE1   = 2
    LOG_DIR       = $[LLVM_ROOT_PATH]/Logs
intrate,fprate:
    preENV_LOG_DIR          = $[LLVM_ROOT_PATH]/Logs  
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp -Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include 
       EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
      #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
      #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 128M
       preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     = -Ofast -mavx 
    CXXOPTIMIZE   = -O3 -mavx 
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -Ofast -mavx -funroll-loops -fno-stack-arrays
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

502.gcc_r,602.gcc_s=peak:  #lang='C'                        
    LDOPTIMIZE    = -z muldefs    

521.wrf_r,621.wrf_s=peak:  #lang='F,C'                      
    COPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

523.xalancbmk_r,623.xalancbmk_s=peak:  #lang='CXX           
    CXXOPTIMIZE   = -O3 -mavx

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++: Version 3.9.0 of Clang, the
   sw_compiler002   = LLVM Compiler Infrastructure 
   sw_compiler003   = Fortran: Version 4.8.2 of GCC, the
   sw_compiler004   = GNU Compiler Collection   
   sw_compiler005   = DragonEgg: Version 3.5.2, the
   sw_compiler006   = LLVM Compiler Infrastructure
#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
 # hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC 
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
 # sw_file            = # ext99                               # File system
 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
 # sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 

__HASH__
502.gcc_r=base=myconfig-m64:
# Last updated 2021-02-25 08:31:47
opthash=543e43669d7b7b3dc518553454d3ab7b2e3e7f4f44f99795894f63758ea2980c
baggage=
compiler_version=\
@eNqtk0tv3CAUhff+FSybhQFj/OwmktNW2TRVM+p2xMs2GgwRhmT678s4VWaR2bQTIcHicL57dOGC\
Ydj/+vLz8f7h+/7hxy4dfSYMsxN4Vn7VzoICw7TApzmEp7VHaNJhjhwKtyBjnpd80d47jzYTTCKo\
KyZGWpIGK0bajspxZFhiTjrCO0IxGVssWsFvLjIPc1xn7pyYdfDqtYT8bRnb2CPtGtq1FeMFL6qi\
FJRU7dhUJSZFV4+ElyxVLPhNtmN+UqEHx7be1zSP9mDdi82NtvGYTzZmu9krJsHipDI9eHKrPmb3\
dg3MGCXvtO8Bmt2i3gKhcVUEb4Egj9pIxLXNvrpoJRDMSi1ZUODbMAD9SmEhtS9R4uqR0RxNQiBd\
t/U5A2qu9UMC8b8y/nbkTKGw/QgGrK6mfAABUlhcTWmuJ2wv86iMEkHJ/7QPb+WXaIJOt3sAP98u\
Nb0olSRpJbmoHTcx7edM75jbCOcF7oE6jXQPcrXokJ9+/KkT1gXAFYhr8r7MyoIU96DtlP0BCQNs\
XA==
compile_options=\
@eNq1UlFv2yAQfvevQLwTp906aVFdySZuwuYYFNtVuxeUOGRhwSYzdrTt1w/cuFv2tEoNEuLgjrvv\
vvtSXaNqtRdbqQTQh1bq2kw80zaybHnT1RvZ8KNo5PZnAK+gZ01jQwI4Hn0c30DPw3TBJgD6O10J\
f7/rzG6ttb814nrsK3WsRutOqo2/lrVfqlX9FaDqw3uASoD0UG6kAZpmLMb2SKdxVMwAIiO3fVmX\
qtuI3jYHUfLvRjftKZzfjK8HMyxyyrOCsWWcZZyyOF0w6yMpn2GXdx4+xBzT9J7M+BwAgEQlW+QA\
AkTfAeRwrY4/ANrWGh1F2epG/hLPV6MO/z51daOVQkrrgwFn64QnYbZLcGt015TiDnp4AjAOXknT\
8zcafaIsD+AZZ9CzrGNW3CfhLLO+c/56bxSneM6HgIsSCj3qgLKcLMiX2FZ7O3b7VuLHfBlyRpd5\
GJGE5E9Dxz3P0EtI+vk/ReiuSMl6P8zrAkK41etvNszcufyq+qONl/EB0M82mQavA31Roi2gRZjP\
eUIipxhVnTDSwqnvL+n9BsZ1Tfo=
exehash=1ddf1e039bda7fcbf10036699efb002347e45a691bf63e38ce67af04bb6dbd3c

505.mcf_r=base=myconfig-m64:
# Last updated 2021-02-25 19:49:15
opthash=51807c5186e5cb9a2d8ed9db8a2b824c3edb0745e42fc7e5a2ac6aad1c11f21d
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNq1Ul1PgzAUfedXNH3vmJ+Jy1gCDDeU0WZAor40GyuurtBJgai/3rIPdT65xPWlvb339pyec0NZ\
oHy2YhkXDMh1xWWheoaqSp5WtKyLBS9pw0qevVvwDBr6qHSJBbudm+4VNAwXT0gPQHMpc2aulrVa\
zqU0M8XOu6YQTd6Z11wszDkvzFTMimeA8utLgFKA5B6uIwEaRsRz9RYOPScZAYB8tWYpfVWyrHZZ\
aicxplFCyNSLIoqJF06IrmQ5r1ALBRC+AKhFmDVvAGWFRA1LK1nyD7YNlVj/vqqLUgqBhJRrBQ7W\
DjUgmi/oK1mXKRtAw+0B17WO/PC2DTt3mMQWPPg9NLR+LkluA3sU6dyhEpus44XumLr7ij9KAw3c\
YpLYn/hPnu77P6E2rLyHeGpTgqex7fiBHz/uyW8kg0bgh/d/nIw2RIIXq730J/C0L+cvukwN2vdF\
/m3zlxMAbGwKhtZxpE8qtCY0seMxDXyn9V7kO444aQfpxxR9AhtkMV8=
exehash=0dc49a14b28807ded241c70f93df9013c855b70b44de836a62ee19b764db39c8

544.nab_r=base=myconfig-m64:
# Last updated 2021-02-25 21:13:23
opthash=dcaea1378278e73847c04083847601f255162f0383cbfc399855c7271ddfeedf
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNq1Ul1vmzAUfedXWH53yLZq0qJSiQ+3ZSPY4kPq+oIIcRovxkY2RO1+/QxN1qZPrdT4xdf44Hvu\
OSdVErX1jm24YEB1PVfSLBzTa970lR7kmutqzzTfPHnwC3RsaSzEg/PZj/kFdJyQLOkCQHerWubu\
toPZrpRyN4Z9nbtC7NvZauBi7a64dBtRyweA2u8XADUAqWO7mQIoyikO7ZZGOChvAIpNxxpdy7Ut\
NXtgj6gW3bZ+hYhSQnF2ncTBVGc4KkN8eKjyy4JUeUlphvO8ssB0SQEAiLW8RyMtgMg3gEY29f4R\
oI1UaM+aXmn+lz0fjejefhqkVkIgoVRnwMk6tE2onQ1cGjXohl1BJ1yAMPQ+KM7zbyT4SWjhwROl\
oGO1Dml5nfg3ub07VW26DXAa3lZHwBlkhA4Z6dEiXsb32Pb4PE2nAfBdkfkVJVnhB3ESF7+Pc07q\
QieJ01/vDNx4RILL3dGlM9h/qVZ/LMxcje+L9iUR/00DYHI0ibyPkT6r0JbQ0i9uK+v7mBPRHjiS\
cszcq8D9A3DTSbk=
exehash=69da7c537ae0246a0244937d63dbcd4f68c43e406b0045aa56ff6cd4d8b26361

519.lbm_r=base=myconfig-m64:
# Last updated 2021-02-25 21:37:13
opthash=8f3ec12fe19c2b5f0e8f5b3e27b6bbb0f67d213697b9fc90079d2a1ff3a4b528
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNq1Ul1PgzAUfedX3PS9Y34mLmMJMJwoo82ARH0hG+tcXaELhUX99ZZ96YwPLnF9aW/v6b3nntNQ\
FjgfL9iMCwZyWXFZqI6hqpJnVVrWxZSX6YqVfPZuoTNk6KPSEAu1WzftK2QYLhnSDiBzLnNmLua1\
mk+kNGeKnbdNIVZ5a1JzMTUnvDAzMS5eAOfXl4AzwHLXriUB9yPquXoL+56TDLZxaicxSaOE0pEX\
RSmhXjikAIBZzivcVAdMLgA3RcerN8CzQuIVyypZ8g+2CZVY/ryqi1IKgYWUSwUHa9s2oJoidJWs\
y4z1kOF2wHWtI2fcPCPOPaGxhQ4GRoaWzKXJbWAPIp07HH6ddbzQvUsPAL+qgQzSdKGxP/SfPQ39\
P2nWPLzHeGSnlIxi2/EDP37as2lEQkbghw9/tL8JseDFYif2CVzsysmrhqleU1/kX8butQdYGxP0\
reNIn1RoTWhox3dp4DuN3SLfciRJ83W+/ZtPmK0nag==
exehash=5b2a2e9c61c3cc86262de15ede0d8cc46c2db1ee1b3aa81f270ab3eb29bd4bc9

525.x264_r=base=myconfig-m64:
# Last updated 2021-02-25 21:40:31
opthash=900f787a8b21665835028cf5c0314ef56438d52574bdc954d41c59ca915a1d3a
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNrtVF1v2jAUfc+vsPxuQillG2oqJSFrs4XYyofU9iWCYIqHP1CcILZfP4dCC3tapVZ9iV/s63tt\
H597dGIlkZit6ZJxCtSmZkrqsaXripV1UTVywapiSyu2/O3AC2iZpTYlDuz3vvWvoGX5eErGANor\
Jai9XjV6NVfKXmo66Nucb0Vv3jC+sOdM2iWfySeAxGgIUAmQOj7XUwBNUhL4ZoongZffAhTyBS3V\
otBVaTNpqsPdYDRsw5OlTXd1NdOnO6USQsnDfYWbZ7hIc0KSIE0LTIJ4Ss5y3kMW4GQSJE5/dzG4\
HF6NvnwFACAqWI1a+ADhS4Ba1LPtDqClVGhLy1pV7A99DjXf/LvVyEpxjrhSGw3OxuHtiBgOwLVW\
TVXSG2j5Y+D7zhtJfD6GvR+YZA48YxRapic+yb9H7m1qcufs7rNeEPt3xbHgE+mGFm6/QbJwGj4G\
Bsv7cb//aHCfJW5BcJK5XhiF2cORj30XoBWF8c//FHAbIs7k+tjND5DJtZr/MmX6pr2fi1flvDQX\
gH3no4nzNtAfSrQBNHWzuyIKvVZPXBww4rzV5okwO8PoDKMzjM4wOsPoDKMzjM4w3t8w/gKDDQFB
exehash=360526569346e4e2edbd607776ed0d1d80cf37c68aa7cf6756dfa906df4f719f

557.xz_r=base=myconfig-m64:
# Last updated 2021-02-25 22:48:48
opthash=1a7333c638bed31a83b08b709b0924602babdb7ca13b4d2b7df6cbd24c0086d8
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNrtU19vmzAcfOdTWLw7JGmXrVGplBA3YQNsBZjavliEOMOLjREmUddPP5M2HWwvq7S+DcnYZ5//\
6O5+kSqhzPZsxwUDqmq4KvXU0k3N84bWh3LLa3pkNd/9cO2RbZmhNhTXHg6uhhPbsjwckimwnUJJ\
5uyLgy42Sjk7zcZDR4ijHGwOXGydDS+dXGTlNwDl5BLAHEB1vm6gAFzEBHmmixZoni5fMJ2lCabz\
+wTh9QKt3eHjaHxx+WHy8ZMhrGZfEfVwdOsv6codnbeEKKQ+PqO7h95RcUrIGsUxxQRFIQHQH5im\
K5ZTySTlqkVFBsemz5WUqjQDwTfiSWZOVvEOan8d+Ac7L1i+72DNZWUU/jWxZaLJegd2QG2UYrna\
shoAAJnkDWzFBBBfANhqmB0fAdyVCh5Z3qiaP7FnqEX1+9ShrJUQUChVadD7XqQJiHEEXGt1qHN2\
Y1veFHie+0ZLn7fh+WdMEtfu+WtbJiEeSW+D2TI2a32vT6tzFHkr2iP8N5/VtoVbUUnih/4DMsr8\
uyScZEd3yXpGCV4ns7kf+Mn9q/htJmwr8KMvf1ncLYSCl/tztt4htNdq893Q9E0vxK85A+AUwmDh\
vu3F76ry6UE4bWuiUxA/AXJNvfw=
exehash=9f539ef6a026a1040f2ec7229d3bd2198e577ab39ecfbdc128d9726838ce2368

538.imagick_r=base=myconfig-m64:
# Last updated 2021-02-25 23:12:32
opthash=97c717fcfdc931959248b33e781d1d0d6fdf3ce527a2270357ba922642e107c2
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNrtU91PgzAQf+evuPS9Y37ExEWWAENFGW0GJOoL2bBzdYUuFBb1r7ewTZ0PxiXOp/WlvY/e/e53\
d6EscD6esykXDOSi4rJQPUNVJc+qtKyLR16mS1by6auFjpChn0q7WKjbOe+eIsNwyZD2AJkzmTNz\
PqvVbCKlOVXsuGsKscw7k5qLR3PCCzMT4+IJcH52CjgDLDfpOhLwIKKeq69w4DnJFWC/s9aldhKT\
NEooHXlRlBLqhUMKAJjlvMJNBsDkBHATeLx8ATwtJF6yrJIlf2MrUYnFd1VdlFIILKRcKNg667QB\
1TDhQsm6zFgfGW4PXNfasc7VN+LcEBpbaKtoZGjaXJpcBvZVpG3bBLRWxwvd63Tj8DMjyCBNJhr7\
Q//B0+5/R0+LxbuLR3ZKySi2HT/w4/sN5JYoZAR+ePvLMWhELHgx3xC+h05eyMmzdlP9Jr7IP5v7\
wT9A25xgYO0Geq9Ea0BDO75OA99pWi7yNUaSNOPzZXYOa3dYu8Pa/fvavQMHRzwT
exehash=cf2ad0109120dfc95c3006a5c766c1add3df97d51ef9a9071005df462279b582

500.perlbench_r=base=myconfig-m64:
# Last updated 2021-02-25 23:22:16
opthash=4a5f9c1939b78b8394e7bdd3843e0446a53a1bd6c089124c8003e9dc8f6d6d03
baggage=
compiler_version=\
@eNqtk81u3CAUhfd+CpbNwoAZG3vcTSSnrbJpqmbU7YifaxsNhsiGZPr2ZZwqs8hs2omQYHE43z26\
cFHX7X99+fl4//B9//Bjl442U1a4AT3DvBjvUEFxWujTGMLT0hIymDBGiZWfiLXPUz6ZefYzWU04\
iYhXQvXlhtUUBGu2pe57QTWVbMvklpWU9Q1VjZI3F5mHMS6j9F6NJszwWkL/dkKs7KKSTS0L2ALT\
NVSbinNZN5zzBhgFxjTtFdTAbrKdmAcILTo2fM/LPLqD8y8ut8bFYz64mO3GGYRGk9dgW/TkF3PM\
7t0ShLWg78zcIjL6Cd4CkX5JNdZAWEZjNZHGZV99dBop4bTRIgD61nXIvFJESO1LlLjMxBpJBqWI\
4Q0/ZyD1tX7MMP1Xxt+OnCklbj6CgaurKR9AwCUurqbU1xPWl3kECyqA/k9791Z+ijaYdLtF+PPt\
xMuL0oYlbcMuasdVTPs50zvmOsJ5QVsEp5FuUQ6TCfnpx5864XxAElBckvdlBIdS3INxQ/YH0I5t\
KA==
compile_options=\
@eNrVU9uK2zAQffdXCL8rTi8sNKwXbEdJ3DqRsGRI+yIcR2nUyFawnLDt11dy4r2UfejCQqnAeObo\
SKOZM7PSDazLg9hJJYA+dlI3ZuKZrpVVx9tTs5UtP4tW7n6G/jvfs6axlNAfjz6Nb3zPS/CSTIAf\
7HUtgsP+ZPYbrYOdEe/HgVLnerQ5SbUNNrIJKlU23wGsbz4CWAGoh3AjDeCUEpTY32qK4mJuDYLy\
jCc4RwCmI/ttpemCFFurOpZNwGQt4ELmwgzIgi0zSMrWiNZC4r4LWmENcxRVWzZbe+UUF3GGOM0i\
ukCUu4hplIXja3QeFQxzWhCSI0o5Jmi1JHaPZ1E+R3yWZog+uM7jFBd5ghzWu3g2o4jxOGU0tDkC\
AEUtO+iqACD+AKBLvjzfA7hrNDyLqtOt/CUurlHHP6FT02qloNL6aMBlXV+apatizdd9kKcwccit\
0ae2Ene+l0xAkoSv1OZyDMefMWGh/0wo37NSJ6SYZdGc2r3novW7MVolC/5A+O9V9D3sqkFYuky/\
IZvS20na14vgnEVxmqXs61DQR3V7BlqzPOIv8oijWPaXvxxA50Ilm8PQNm/bny82563e/LDHzJ0j\
qBoM67GrAOhbLpuGr0viH0tjn7yM2MJCsWt1VV+zwIUbmycz8xulMKcd
exehash=83f7e12f91425e379a399356edfb6579bbff22659a6dc6b95efa491a85b524b4

