#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):     LLVM/3.9.0
#    Operating system(s):     Linux
#    Hardware:                AMD64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label nativeconfig                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64   
%elif %{bits} == 32
%   define model        -m32   
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

#backup_config          = 0                     # Uncomment for cleaner config/ directory
flagsurl01              = $[top]/config/flags/gcc.xml
flagsurl02              = $[top]/config/flags/clang.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv

preenv                  = 1
tune                    = base,peak

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the 
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might 
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes 
%define  cpucores       4      #         number of physical cores
%define  cputhreads     8      #         number of logical cores
%define  numanodes      0      #         number of NUMA nodes for affinity

intrate,fprate:
   copies                  = %{cpucores}      
intspeed,fpspeed:
   threads                 = %{cputhreads}   

#-------- CPU binding for rate -----------------------------------------------
# When you run multiple copies for SPECrate mode, performance
# is improved if you bind the copies to specific processors.  EDIT the numactl stuff below.

intrate,fprate:
submit       = echo "sudo perf c2c record -- $command" > run.sh ; $BIND bash run.sh

# Affinity settings:                     EDIT this section
# Please adjust these values for your 
# particular system as these settings are 
# for an 8 core, one NUMA node (-m 0) system.
#bind0	= numactl -m 0 --physcpubind=0
#bind1	= numactl -m 0 --physcpubind=1
#bind2	= numactl -m 0 --physcpubind=2
#bind3	= numactl -m 0 --physcpubind=3
#bind4	= numactl -m 0 --physcpubind=4
#bind5	= numactl -m 0 --physcpubind=5
#bind6	= numactl -m 0 --physcpubind=6
#bind7	= numactl -m 0 --physcpubind=7

# EDIT to add additional cores and NUMA nodes as necessary
# bind8	        = numactl -m 1 --physcpubind=8
# bind9	        = numactl -m 1 --physcpubind=9
# bind10	= numactl -m 1 --physcpubind=10
# bind11	= numactl -m 1 --physcpubind=11
# bind12	= numactl -m 1 --physcpubind=12
# bind13	= numactl -m 1 --physcpubind=13
# bind14	= numactl -m 1 --physcpubind=14
# bind15	= numactl -m 1 --physcpubind=15
#
# bind16	= numactl -m 2 --physcpubind=16
# bind17	= numactl -m 2 --physcpubind=17
# bind18	= numactl -m 2 --physcpubind=18
# bind19	= numactl -m 2 --physcpubind=19
# bind20	= numactl -m 2 --physcpubind=20
# bind21	= numactl -m 2 --physcpubind=21
# bind22	= numactl -m 2 --physcpubind=22
# bind23	= numactl -m 2 --physcpubind=23
#
# bind24	= numactl -m 3 --physcpubind=24
# bind25	= numactl -m 3 --physcpubind=25
# bind26	= numactl -m 3 --physcpubind=26
# bind27	= numactl -m 3 --physcpubind=27
# bind28	= numactl -m 3 --physcpubind=28
# bind29	= numactl -m 3 --physcpubind=29
# bind30	= numactl -m 3 --physcpubind=30
# bind31	= numactl -m 3 --physcpubind=31
#
# bind32	= numactl -m 4 --physcpubind=32
# bind33	= numactl -m 4 --physcpubind=33
# bind34	= numactl -m 4 --physcpubind=34
# bind35	= numactl -m 4 --physcpubind=35
# bind36	= numactl -m 4 --physcpubind=36
# bind37	= numactl -m 4 --physcpubind=37
# bind38	= numactl -m 4 --physcpubind=38
# bind39	= numactl -m 4 --physcpubind=39
#
# bind40	= numactl -m 5 --physcpubind=40
# bind41	= numactl -m 5 --physcpubind=41
# bind42	= numactl -m 5 --physcpubind=42
# bind43	= numactl -m 5 --physcpubind=43
# bind44	= numactl -m 5 --physcpubind=44
# bind45	= numactl -m 5 --physcpubind=45
# bind46	= numactl -m 5 --physcpubind=46
# bind47	= numactl -m 5 --physcpubind=47
#
# bind48	= numactl -m 6 --physcpubind=48
# bind49	= numactl -m 6 --physcpubind=49
# bind50	= numactl -m 6 --physcpubind=50
# bind51	= numactl -m 6 --physcpubind=51
# bind52	= numactl -m 6 --physcpubind=52
# bind53	= numactl -m 6 --physcpubind=53
# bind54	= numactl -m 6 --physcpubind=54
# bind55	= numactl -m 6 --physcpubind=55
#
# bind56	= numactl -m 7 --physcpubind=56
# bind57	= numactl -m 7 --physcpubind=57
# bind58	= numactl -m 7 --physcpubind=58
# bind59	= numactl -m 7 --physcpubind=59
# bind60	= numactl -m 7 --physcpubind=60
# bind61	= numactl -m 7 --physcpubind=61
# bind62	= numactl -m 7 --physcpubind=62
# bind63	= numactl -m 7 --physcpubind=63


#------- Compilers ------------------------------------------------------------
default:
#                                      EDIT paths to LLVM and libraries:
%   define  gcc_dir        /usr/bin
    BASE_DIR           = path_to_llvm_build_directory
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]/build
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    DRAGONEGG_PATH     = $[LLVM_PATH]/dragonegg
    DRAGONEGG_SPECS    = $[DRAGONEGG_PATH]/integrated-as.specs
    # DragonEgg version 3.5.2 requires GCC version 4.8.2.
    # EDIT LLVM_GCC_DIR to reflect the GCC path.
    LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    # Specify Intel OpenMP library path.
    OPENMP_DIR         = $[BASE_DIR]/lib/libomp_oss/exports
   
    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = $(LLVM_BIN_PATH)/clang %{model}
    CXX                 = $(LLVM_BIN_PATH)/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/gfortran
    FC                  = $(FORTRAN_COMP) %{model}
    CLD                 = $(LLVM_BIN_PATH)/clang %{model}
    FLD                 = $(LLVM_BIN_PATH)/clang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the 
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same 
%else                                 # options, so we add them to all of 
    LDCFLAGS        = #-z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix} 

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG 
   FPORTABILITY  = -fconvert=big-endian 

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char 
    CXXPORTABILITY = -D__BOOL_DEFINED 

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian 

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -O3 -mavx -g 
    CXXOPTIMIZE   = -O3 -mavx
    FOPTIMIZE     = -O3 -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so
    EXTRA_FLIBS   = -lgfortran -lm
    LDOPTIMIZE    = -z muldefs
intrate,fprate:
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp -Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include 
       EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
      #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
      #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 128M
       preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     = -Ofast -mavx 
    CXXOPTIMIZE   = -O3 -mavx 
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -Ofast -mavx -funroll-loops -fno-stack-arrays
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

502.gcc_r,602.gcc_s=peak:  #lang='C'                        
    LDOPTIMIZE    = -z muldefs    

521.wrf_r,621.wrf_s=peak:  #lang='F,C'                      
    COPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

523.xalancbmk_r,623.xalancbmk_s=peak:  #lang='CXX           
    CXXOPTIMIZE   = -O3 -mavx

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++: Version 3.9.0 of Clang, the
   sw_compiler002   = LLVM Compiler Infrastructure 
   sw_compiler003   = Fortran: Version 4.8.2 of GCC, the
   sw_compiler004   = GNU Compiler Collection   
   sw_compiler005   = DragonEgg: Version 3.5.2, the
   sw_compiler006   = LLVM Compiler Infrastructure
#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
 # hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC 
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
 # sw_file            = # ext99                               # File system
 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
 # sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 

__HASH__
557.xz_r=base=myconfig-m64:
# Last updated 2019-11-16 10:55:20
opthash=29c453b095d5a67189606a7e4d91700393471b4f5fae7094b33055ce285b6d51
baggage=
compiler_version=\
@eNqtkDtPwzAUhff8Co8wNHadxHHCghQe6gIIKtbKz8TCsSvHhvLviQqiA12g6Eq+w/H5ztUBXbd5\
vn58Wt3fbe4f1vNqM2GZ68GrCpPxDixRPg84G2LcTi2EvYlD4rnwI7T2dVyMJgQf4N6UzyIgFRO6\
LHCNFMO0KaXWDEnEcYN5g0uENUWCCn5+lPkypGng3ovBxKA+I+S7Y2zPrgjVmgskSUEKWi+pokjV\
jealaLgWRSULQapqeZ6tWehVbMGOkg0pF8m9OP/mFta4tFv0LmXrISgmweilsi3Y+snsspWbIrNW\
ySsTWgAHP6rvg6CeFEaQJ2Ml5MZlNz45CQRz0kgWFbjtOmA+ASzOzc2ANAVoDYe9ENAQSg7xsD7V\
n+Mc/ZbxVcaBUub0Pxh5dTKlPp2wb+RJWSWikn+0d9/xY7LRzL9bkF9cjqQ8KhV41gp8VNvtxfk9\
3PSD+QGcmSoD
compile_options=\
@eNrtU1tvmzAYfedXWLwT0rTLtqhUCuAmbIAtLlXbF4uLM7xgHHGpuv76GVoy2KRpfR8S+Dt8Pjac\
c+yLSuPJkR5YSYE4tUxUzUax4R10EfagH4EogBCYsePaStPWLGtJ3VU5q8kTrdnhh6EuVUWWjWTK\
evF5uVYVxUIe3gBVLwSn+rHomiIVQj80dLXU046VuZ6ySs/KpPoGNL6+AloGNDF+wEIAzQ4xtOTg\
29CMd2+YbOMIEfMhgiiwYWAsny9Wl1cf1h8/yQn77R0kFvJvnR3ZGxcjxYMecdCI7h9nS4UxxgEM\
Q4Iw9D0MNGch7+ZEM8IpJ0z0qEi0lRwzwbmoZFGytHzhiZ6c2AT1jwn8Y3ZW0Ow4wQ3jJ6n5rxc5\
LdtktuAE1FIpmomc1gAADV1K1ZKnZzC73n7MxVJPcN2Irs7ojapYG2BZxr978cpA5heEI0OdGaMq\
0lULx7fudhfK3tykoWtC39qT2YT/rtFaVVAvKo4cz3mEUpnRwkE0eB8FW4JREG1Nx3Wih7N0vZmq\
4jr+13cdJ6C9AN6VOT00r9GYJOa3FrgW6Xeatc3NLEtnzwEYAuHa74oQ6hnWGIPzjn+RYWBMOhPO\
sD2K+zROovgTURpyUw==
exehash=10a539a51612dc678d05e33806a9cc79d752d7ae4fdb42abfc101d4af5972bb3

502.gcc_r=base=myconfig-m64:
# Last updated 2020-02-23 17:37:14
opthash=3cdb2379a9f9ccf3c6cd3dc272a4f3604315b8f768afb1400bc887f5875cb8e4
baggage=
compiler_version=\
@eNqt0U1P7CAUBuB9fwXL62KAoS2ldWNSP+LmanTidsJnS6RgKHjHf28z3jgLZ6NjSGDxcp5zAqDv\
t09XD4+3d3+3d/eb5egK6bgfwKuOsw0erDFcFvgzpvQydwgNNo1ZQBkm5NzrtJpsjCGifRFcQkBr\
Lk1VkgZrTlhbKWM4VliQloiWVJgYhiWT4uyo+TzmeRQhyNGmqD9aqDfP+d6uKTNGSKxoSUvWrJlm\
WDetEZVshZFlrUpJ63p9Vmx4HHTqwI7RLa1W2T/78M+vnPV5txp8LjZj1FyBKSjtOvASZrsrbv2c\
uHNaXdrYATSGSX8OhMysCUYiW6eQsL64DtkrILlXVvGkwU3fA/sB8LS83ALkOSJnBRqkRJYyemiP\
mlPrIYH4u8b/xzgoFWS/YcD6ZOUXBFjB9clKc7qw/5lH7bRMWv2wvP9sP2WX7HK7A/D8YqLV0agk\
S1aSo9luHy77YaYv5jtj3Vf+
compile_options=\
@eNq1UdFumzAUffdXXPmdEHXrpEVNJTBu4g2wFUy17cVKiLOwAu4wVNu+foaGLnmYtD7MkuUjnet7\
zz0nNY1Xbx/0oaw0mMeuNI1doIje05iLhKYS5IZSCHMWR8h2bVl0qu2bfdmqJ92Wh59LPMfIQet+\
Ojx7P7/GCBGeiAVg/2hq7T8ce3vcGeMfrL6a+7u+rPb+rmz8oto2X8Gr370FrwDPTAJmBrwoE5S4\
J41omK/AY7Ph+mVTVP1ej9g+6kJ9t6btTuXqen41wSCXXGW5EBuaZYoLmibCcSxVKzL0XQf3VBGe\
3rGVWgOAx984JdunH3BxTt1i4TTCjTV9W+hbjMgCCFn++37PP3j4gQu5xBfLYuScIiK/i4NV5rjL\
xUc2pClZq6ngvzqBER+ECskS9oW6aZMtoxD6SW4CJfhGBiGLmfw86R0Nwihm6cdXxX4y+cx77xfU\
fbXXB/vM3ZjdN1109nbgqvpPMC8GAozuxtGr8vjrmnxodca86BmnJIFcq5iFQxBVfRrM8yHUs0R/\
A4Ew92A=
exehash=a718dacf03ab9894bbb95608081aca723589382c25171abe9ec92ade469e29bc

525.x264_r=base=myconfig-m64:
# Last updated 2020-02-25 10:43:01
opthash=45d0e24cc4b8348501f668700bd9e13dd92ead5395507af6a794bc619d105ab2
baggage=
compiler_version=\
@eNqt0U1P7CAUBuB9fwXL62KAoS2ldWNSP+LmanTidsJnS6RgKHjHf28z3jgLZ6NjSGDxcp5zAqDv\
t09XD4+3d3+3d/eb5egK6bgfwKuOsw0erDFcFvgzpvQydwgNNo1ZQBkm5NzrtJpsjCGifRFcQkBr\
Lk1VkgZrTlhbKWM4VliQloiWVJgYhiWT4uyo+TzmeRQhyNGmqD9aqDfP+d6uKTNGSKxoSUvWrJlm\
WDetEZVshZFlrUpJ63p9Vmx4HHTqwI7RLa1W2T/78M+vnPV5txp8LjZj1FyBKSjtOvASZrsrbv2c\
uHNaXdrYATSGSX8OhMysCUYiW6eQsL64DtkrILlXVvGkwU3fA/sB8LS83ALkOSJnBRqkRJYyemiP\
mlPrIYH4u8b/xzgoFWS/YcD6ZOUXBFjB9clKc7qw/5lH7bRMWv2wvP9sP2WX7HK7A/D8YqLV0agk\
S1aSo9luHy77YaYv5jtj3Vf+
compile_options=\
@eNrtU01zmzAUvOtXaHQnuI7jNp44M3woiVpAGhCdpheNjeWYBlAHQcbtr68gdooPnWkuyQUuPLF6\
0ttdNlKVVa4e5TYvJFQ/m1xVegF8/BUHlIU44pDHGEM3JYEPdFPnWSPqttrktXiSdb79tUQTBEyp\
Taepzy4nFwgAj4ZsAZG9U6W0H3et3q2VsrdaTif2us2Ljb3OKzsrVtUDtMr5DFoZtNRxgDMFLT9h\
2DOvyMduegstUmxkpjZC15mdV2Y32U/ns245KG25b+qVHn7JVFmq6nCecFJORZIyFuMkEZThKGQn\
mHvPMY19HC8n+w/T89nF/OMnCKFFz82cq6c9PHkOnQEzDOCVVm2dyWsEvAX0vOX/s3/uoO5nyvgS\
nUiBgNHRY+lN4NwmBjuVpUddHHl34rjhHXVCgHY0GCch+Y7NLEfR+jHxNx47gtGYOy4JCL8/sunl\
QyAg0ZdX/TIHCwbOWL9h2Rr+W/2MXan1D5k1+rrDivKvbS/yQthrH/ivcuufNGl31AB5mae/JXT4\
nQiI29lUlIeLadpZPvB7zM6YnTE7Y3bG7IzZecvs/AH42PEq
exehash=e9911a7ccc15b936ea0f8026481f7259013d7ddf960924fa0ed36f595f058b95

505.mcf_r=base=myconfig-m64:
# Last updated 2020-07-20 12:39:27
opthash=570aba0e778479251893b253dca63f33a5ab0470430dd984971de1de32f5a8e3
baggage=
compiler_version=\
@eNqt0U1P7CAUBuB9fwXL62KAoS2ldWNSP+LmanTidsJnS6RgKHjHf28z3jgLZ6NjSGDxcp5zAqDv\
t09XD4+3d3+3d/eb5egK6bgfwKuOsw0erDFcFvgzpvQydwgNNo1ZQBkm5NzrtJpsjCGifRFcQkBr\
Lk1VkgZrTlhbKWM4VliQloiWVJgYhiWT4uyo+TzmeRQhyNGmqD9aqDfP+d6uKTNGSKxoSUvWrJlm\
WDetEZVshZFlrUpJ63p9Vmx4HHTqwI7RLa1W2T/78M+vnPV5txp8LjZj1FyBKSjtOvASZrsrbv2c\
uHNaXdrYATSGSX8OhMysCUYiW6eQsL64DtkrILlXVvGkwU3fA/sB8LS83ALkOSJnBRqkRJYyemiP\
mlPrIYH4u8b/xzgoFWS/YcD6ZOUXBFjB9clKc7qw/5lH7bRMWv2wvP9sP2WX7HK7A/D8YqLV0agk\
S1aSo9luHy77YaYv5jtj3Vf+
compile_options=\
@eNqVkV9vgjAUxd/7KZq+I+5vMiMmgEzZgDYCybaXRrBMJlBHwWz79CsITh+WKC8lOffec8/verxQ\
8uWGJWnGIN9WKS/ECIiqTOOKlnWxSku6Y2WafGvoCgH5K2SJhoaDh+EdAsDELhlBpK55ztTNuhbr\
iHM1Eex6qEZ1mq3UKC3UOFsW71DJ72+hEkOF904DDpWpTyxTPt7UMsIZhIottiymn4KXVadSPQww\
9UNCFpbvU0wszyWyEt/ImcvdFzz5uh6HSDc4FrwuYzZBwBxB09TO33TfgY0nTAINnayNgMxskvDR\
0We+1E4jtKpheeacmn3FmZkQwI0nCWzXfrNkX5+wnWm9BAudErwIdMN27OC1t26zIuDY3vNFt+h4\
HWFUfmBeZyuWiL025tEHiysxabQs/2N8YAFhC8qZXoT235i4GXWkHPZpXVw9mFPHNhqkWd4Z47C5\
z9FxfgFZvtSZ
exehash=f14959ac85094ef425cfd39ce83950801096ffedfedd54dc6ccf1c3a545d0c72

519.lbm_r=base=myconfig-m64:
# Last updated 2020-07-28 15:41:56
opthash=11f2bd28e1b8bdd7a9eca1c5d1ce367dc6ae9355f77e2b6fdb06b4f8a10831f3
baggage=
compiler_version=\
@eNqt0U1P7CAUBuB9fwXL62KAoS2ldWNSP+LmanTidsJnS6RgKHjHf28z3jgLZ6NjSGDxcp5zAqDv\
t09XD4+3d3+3d/eb5egK6bgfwKuOsw0erDFcFvgzpvQydwgNNo1ZQBkm5NzrtJpsjCGifRFcQkBr\
Lk1VkgZrTlhbKWM4VliQloiWVJgYhiWT4uyo+TzmeRQhyNGmqD9aqDfP+d6uKTNGSKxoSUvWrJlm\
WDetEZVshZFlrUpJ63p9Vmx4HHTqwI7RLa1W2T/78M+vnPV5txp8LjZj1FyBKSjtOvASZrsrbv2c\
uHNaXdrYATSGSX8OhMysCUYiW6eQsL64DtkrILlXVvGkwU3fA/sB8LS83ALkOSJnBRqkRJYyemiP\
mlPrIYH4u8b/xzgoFWS/YcD6ZOUXBFjB9clKc7qw/5lH7bRMWv2wvP9sP2WX7HK7A/D8YqLV0agk\
S1aSo9luHy77YaYv5jtj3Vf+
compile_options=\
@eNqVUV1PgzAUfe+vaPrOmJ+Jy1gCDDcUaMNHor40gxWHA2ooLOqvtzA2R6KJ60vbnHvPuedcj5dK\
sdqyNMsZ5O91xksxAaKusqSmVVOus4ruWJWlnxq6QEA+hSzR0Hh0N75BAJjYJROI1A0vmLrdNGIT\
c66mgl2O1bjJ8rUaZ6Wa5KvyFSrF7TVUEqjwg9KIQ2UeEMuUlze3jGjR/6kehZgGESG+FQQUE8tz\
CYRQwVeSZrX7gIPTNzlECsCp4E2VsBkC5gSapvb/4fYd2HjAJNTQYFIEpE2TRPeOvggkNpy6Qw3L\
M5d0UPCrDQRwq0JC27VfLFl68NSxWE+hr1OC/VA3bMcOn49crTsEHNt7PCvwPqGT4JQvWDT5mqVi\
j015/MaSWsxaLC9+Uj26h7CLxpmfFeafNnFLdYIc5+lUXD1cUsc22hTzohfGUbuRk3V8A2BcyqQ=
exehash=cc63c295c6ff29514abadfb58b0a0307b386b3c744b0824dfb3b29737fba2f59

544.nab_r=base=myconfig-m64:
# Last updated 2020-07-28 15:45:43
opthash=9cd751dc3223c4e9a00c61c646e5c703ae8576660d0b070120fe7dcf02147937
baggage=
compiler_version=\
@eNqt0U1P7CAUBuB9fwXL62KAoS2ldWNSP+LmanTidsJnS6RgKHjHf28z3jgLZ6NjSGDxcp5zAqDv\
t09XD4+3d3+3d/eb5egK6bgfwKuOsw0erDFcFvgzpvQydwgNNo1ZQBkm5NzrtJpsjCGifRFcQkBr\
Lk1VkgZrTlhbKWM4VliQloiWVJgYhiWT4uyo+TzmeRQhyNGmqD9aqDfP+d6uKTNGSKxoSUvWrJlm\
WDetEZVshZFlrUpJ63p9Vmx4HHTqwI7RLa1W2T/78M+vnPV5txp8LjZj1FyBKSjtOvASZrsrbv2c\
uHNaXdrYATSGSX8OhMysCUYiW6eQsL64DtkrILlXVvGkwU3fA/sB8LS83ALkOSJnBRqkRJYyemiP\
mlPrIYH4u8b/xzgoFWS/YcD6ZOUXBFjB9clKc7qw/5lH7bRMWv2wvP9sP2WX7HK7A/D8YqLV0agk\
S1aSo9luHy77YaYv5jtj3Vf+
compile_options=\
@eNq1UctuwjAQvOcrLN9NaIsqFRGkPAykDbGVh9T2EuVhICWJUUwQ7dfXCY/CoVI51BevNLs7OzMu\
r1AZr9kiLxjgm23OKzFUxLbO021UN1WW19GO1fniU4N3UJGlkC0a7Pee+gOoKCaZ0yGA6oqXTF2v\
GrFKOFcXgt331aTJi0xN8kpNi7haAlQ+DgBKAeInph4HyPIpNuXnWtgIpwDZYsPSOq4yWdZsyfYo\
Ljar+KLDcgnF3sSxja72sBWa+Lgo0sOARH5IqYd9P5KN7pwCABB5kPzxbg+u3nHIofIyMBK8qVM2\
hoo5BKap/V3VYYIYz4QGGrySCBXpj0nDiaNPfYldy+1QA7vmLDo1/IN+qJD2PBrYc/sdS46TGR09\
fg08PaLEC3TDduzg7XRlZwtUHNt9uSnio7UXjqMvUDZFxhbigI148sHSrRi3WFH+xHG2DYDOU8e6\
KYVfZZJ21QVyvqdjmevBLJJ2tvYX5ZGYhG2UFzl+AzHv7PM=
exehash=00f77ff3184ef557260a190be1230e177e7458e5a2ffabfbf83274f56786f78f

500.perlbench_r=base=myconfig-m64:
# Last updated 2021-02-02 13:23:45
opthash=51ece1634be5510c555970929c706dd642863f69e210382390a29132b5a69acd
baggage=
compiler_version=\
@eNqtkU1P7CAYhff9FSyviwGGMi2tG5P6ETdXoxO3E77aEikYCt7x30vqjbNwNjqGBBbnPc85eQFd\
t3u6eni8vfu7u7vf5qctpOVuAK86zMY7sMYwH/BnjPFlbhEaTByTgNJPyNrXaTWZEHxAiwlmEVQb\
LntakhprTlhDVd9zrLAgDRENoZj0DEsmxdlR5vOY5lF4L0cTg/6IUG+O84XdcykFxrheY9YQkpOU\
5mxTSlE3lAvGNyXFaybPii0Pg44t2LNqV9FVcs/O/3Mra1zarwaXiu0YNFdg8krbFrz42eyLWzdH\
bq1Wlya0AI1+0p+FUD9rgpdCUCRjFRLGFdc+OQUkd8ooHjW46TpgPig85vVlSpoDskagQUpkKlYd\
OqD6VD8kEH+X8X8jBwqF7DcYcHMy5RcIkML1yZT6dMLyM4/aahm1+qG9+4yfko0mT7cAnl9MFT0q\
lSRrJTmq7Rcx34dOX5jv1GxZ6Q==
compile_options=\
@eNrVU11vmzAUfedXWLw7ZN1UaVGpBMQJbCa2sJHSvVgEnIaVjwhD1O3Xz6ZJmkjVtDzOEuJ+HHzv\
PeeyahtYZy9yW1YStPu+bBs1s1TflXkvuqEpyk4cZFduf7n2J9vSptIQ155Ovk7vbcsKSExnwHZ2\
bS2dl92gdpu2dbZK3k2dqjrUk81QVoWzKRsnr7LmGcD6/guAOYDtqdykBXDOKAr0azVHfrrUBkUJ\
FgFJEIDRRD9FqXonItrK91nj8LKWMCwTqU6RkMcY0qxTstMh+do7ndSG2su8y5pCXzknqY+RYNhj\
IWLCVIw87E6P1YWXciJYSmmCGBOEolVMdU5gL1kisYgwYmfXeIKRNAmQiY0uWSwY4sKPOHP1jABA\
8lmPmx1eAXwGb+dYCkerdC3WI+oyTE3kQbVDl8tH2wpmIAjcG8l9+4z43wjlrn3FtG1prQKaLrC3\
ZDp3zfqY9dEqCMUZ8N/LYFvEsEF5FEc/kB7pQpNxYEoS7vkRjvjTiZF3eUYEWvPEEx/iqIFo9Pfb\
f4Gj8NcrAn+DeqgKuVUfb8pDu/kp8149GmxVg9N5lxiAUX88v31t/kYUMVdeJM99/guHup/Y46EO\
+WapqvrYIknNgl5s5x8oQ1Ta
exehash=bf599ba3943b444e04d68bc8ce7e665860761c357265bfce8209acfcf7379e6c

